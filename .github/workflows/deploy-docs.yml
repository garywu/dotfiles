name: Deploy Docs to GitHub Pages

on:
  push:
    branches: [main]
    paths: ['docs/**', 'nix/**', 'brew/**', 'scripts/generate-package-inventory.sh']
  workflow_dispatch:

# Ensure docs workflow only affects docs directory
defaults:
  run:
    working-directory: docs

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        working-directory: docs
        run: |
          # Remove package-lock.json to avoid cross-platform rollup issues
          rm -f package-lock.json
          npm install

      - name: Build documentation
        working-directory: docs
        run: npm run build

      - name: Test built site with dynamic discovery
        working-directory: .
        run: |
          chmod +x tests/docs/test_built_site.sh
          tests/docs/test_built_site.sh

      - name: Upload sitemap artifact
        uses: actions/upload-artifact@v4
        with:
          name: sitemap
          path: docs/sitemap.txt

  build:
    runs-on: ubuntu-latest
    needs: validate
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        working-directory: docs
        run: |
          # Remove package-lock.json to avoid cross-platform rollup issues
          rm -f package-lock.json
          npm install

      - name: Build with Astro
        working-directory: docs
        run: npm run build

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs/dist

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  verify:
    runs-on: ubuntu-latest
    needs: deploy
    continue-on-error: true  # Don't fail the whole pipeline if verification fails
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download sitemap artifact
        uses: actions/download-artifact@v4
        with:
          name: sitemap
          path: docs/

      - name: Wait for deployment
        run: sleep 30

      - name: Test production links with dynamic discovery
        working-directory: .
        run: |
          chmod +x tests/docs/test_production_dynamic.sh
          tests/docs/test_production_dynamic.sh

      - name: Create deployment status comment
        if: always()
        run: |
          echo "Documentation deployed and verified at: https://garywu.github.io/dotfiles/"
